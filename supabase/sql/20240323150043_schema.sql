
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."Country" AS ENUM (
    'CH',
    'CN',
    'DE',
    'US',
    'GB'
);

ALTER TYPE "public"."Country" OWNER TO "postgres";

CREATE TYPE "public"."Currency" AS ENUM (
    'USD',
    'RMB',
    'Euro',
    'CHF',
    'GBP'
);

ALTER TYPE "public"."Currency" OWNER TO "postgres";

CREATE OR REPLACE FUNCTION "public"."handle_new_user"() RETURNS "trigger"
    LANGUAGE "plpgsql" SECURITY DEFINER
    SET "search_path" TO 'public'
    AS $$
begin
  insert into public."Profile" (id)
  values (new.id);
  return new;
end;
$$;

ALTER FUNCTION "public"."handle_new_user"() OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."account" (
    "id" integer NOT NULL,
    "name" "text" NOT NULL,
    "country" smallint DEFAULT '25'::smallint NOT NULL,
    "email" "text" NOT NULL,
    "website" "text",
    "description" "text",
    "accepted_currencies" "public"."Currency"[]
);

ALTER TABLE "public"."account" OWNER TO "postgres";

CREATE SEQUENCE IF NOT EXISTS "public"."Account_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER TABLE "public"."Account_id_seq" OWNER TO "postgres";

ALTER SEQUENCE "public"."Account_id_seq" OWNED BY "public"."account"."id";

CREATE TABLE IF NOT EXISTS "public"."contact" (
    "id" integer NOT NULL,
    "email" character varying(255) NOT NULL,
    "firstName" "text",
    "lastname" "text" NOT NULL,
    "personality" "text"
);

ALTER TABLE "public"."contact" OWNER TO "postgres";

CREATE SEQUENCE IF NOT EXISTS "public"."Contact_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER TABLE "public"."Contact_id_seq" OWNER TO "postgres";

ALTER SEQUENCE "public"."Contact_id_seq" OWNED BY "public"."contact"."id";

CREATE TABLE IF NOT EXISTS "public"."post" (
    "id" integer NOT NULL,
    "message" "text" NOT NULL,
    "accountId" integer
);

ALTER TABLE "public"."post" OWNER TO "postgres";

CREATE SEQUENCE IF NOT EXISTS "public"."Post_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

ALTER TABLE "public"."Post_id_seq" OWNER TO "postgres";

ALTER SEQUENCE "public"."Post_id_seq" OWNED BY "public"."post"."id";

CREATE TABLE IF NOT EXISTS "public"."product_category" (
    "id" bigint NOT NULL,
    "name" character varying NOT NULL,
    "colour_hex" character varying,
    "abbr" "text"
);

ALTER TABLE "public"."product_category" OWNER TO "postgres";

ALTER TABLE "public"."product_category" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Product_Category_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."account_contact" (
    "id" bigint NOT NULL,
    "account_id" integer NOT NULL,
    "contact_id" integer NOT NULL,
    "relationship" smallint NOT NULL,
    "untill" "date",
    "since" "date" DEFAULT "now"() NOT NULL
);

ALTER TABLE "public"."account_contact" OWNER TO "postgres";

ALTER TABLE "public"."account_contact" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."account_contact_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."country" (
    "id" smallint NOT NULL,
    "iso" "text" NOT NULL,
    "iso3" "text",
    "name" "text" NOT NULL,
    "nicename" "text" NOT NULL,
    "numcode" smallint,
    "phonecode" smallint
);

ALTER TABLE "public"."country" OWNER TO "postgres";

ALTER TABLE "public"."country" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."country_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."currency" (
    "id" smallint NOT NULL,
    "name" "text" DEFAULT 'US Dollar'::"text" NOT NULL,
    "iso" "text" DEFAULT 'USD'::"text" NOT NULL,
    "symbol" "text" DEFAULT 'NULL'::"text" NOT NULL
);

ALTER TABLE "public"."currency" OWNER TO "postgres";

ALTER TABLE "public"."currency" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."currency_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."price" (
    "id" bigint NOT NULL,
    "price" real NOT NULL,
    "currency" "public"."Currency" DEFAULT 'USD'::"public"."Currency" NOT NULL
);

ALTER TABLE "public"."price" OWNER TO "postgres";

ALTER TABLE "public"."price" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."price_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."product" (
    "id" integer NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "description" "text" DEFAULT ''::"text",
    "category" bigint,
    "active" boolean DEFAULT true NOT NULL,
    "abbreviation" "text" DEFAULT ''::"text" NOT NULL
);

ALTER TABLE "public"."product" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."product_component" (
    "id" bigint NOT NULL,
    "main" integer NOT NULL,
    "component" integer NOT NULL
);

ALTER TABLE "public"."product_component" OWNER TO "postgres";

ALTER TABLE "public"."product_component" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."product_component_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."product" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."product_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."product_image" (
    "id" bigint NOT NULL,
    "productId" integer NOT NULL,
    "coverImage" boolean DEFAULT false NOT NULL,
    "filePath" "text" NOT NULL
);

ALTER TABLE "public"."product_image" OWNER TO "postgres";

ALTER TABLE "public"."product_image" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."product_image_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."product_variant" (
    "id" bigint NOT NULL,
    "product_id" integer NOT NULL,
    "name" "text" NOT NULL,
    "description" "text",
    "weight" integer,
    "dimension" integer,
    "material" integer
);

ALTER TABLE "public"."product_variant" OWNER TO "postgres";

ALTER TABLE "public"."product_variant" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."product_variant_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."product_variant_manufacturer" (
    "manufacturer_id" integer NOT NULL,
    "product_variant_id" bigint NOT NULL,
    "price" real DEFAULT '0'::real NOT NULL,
    "currency" "public"."Currency" DEFAULT 'USD'::"public"."Currency" NOT NULL
);

ALTER TABLE "public"."product_variant_manufacturer" OWNER TO "postgres";

ALTER TABLE "public"."product_variant_manufacturer" ALTER COLUMN "product_variant_id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."product_variant_manufacturer_product_variant_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."profile" (
    "id" "uuid" NOT NULL,
    "firstname" "text",
    "lastname" "text",
    "avatar_url" "text"
);

ALTER TABLE "public"."profile" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."relationship" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "description" "text" NOT NULL
);

ALTER TABLE "public"."relationship" OWNER TO "postgres";

ALTER TABLE "public"."relationship" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."relationship_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."account" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."Account_id_seq"'::"regclass");

ALTER TABLE ONLY "public"."contact" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."Contact_id_seq"'::"regclass");

ALTER TABLE ONLY "public"."post" ALTER COLUMN "id" SET DEFAULT "nextval"('"public"."Post_id_seq"'::"regclass");

ALTER TABLE ONLY "public"."account"
    ADD CONSTRAINT "Account_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."contact"
    ADD CONSTRAINT "Contact_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."post"
    ADD CONSTRAINT "Post_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."product_category"
    ADD CONSTRAINT "Product_Category_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."product_category"
    ADD CONSTRAINT "Product_Category_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."product"
    ADD CONSTRAINT "Product_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."account_contact"
    ADD CONSTRAINT "account_contact_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."country"
    ADD CONSTRAINT "country_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."currency"
    ADD CONSTRAINT "currency_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."price"
    ADD CONSTRAINT "price_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."product_component"
    ADD CONSTRAINT "product_component_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."product_image"
    ADD CONSTRAINT "product_image_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."product_variant_manufacturer"
    ADD CONSTRAINT "product_variant_manufacturer_pkey" PRIMARY KEY ("manufacturer_id", "product_variant_id");

ALTER TABLE ONLY "public"."product_variant"
    ADD CONSTRAINT "product_variant_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."profile"
    ADD CONSTRAINT "profiles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."relationship"
    ADD CONSTRAINT "relationship_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."relationship"
    ADD CONSTRAINT "relationship_pkey" PRIMARY KEY ("id");

CREATE UNIQUE INDEX "Account_email_key" ON "public"."account" USING "btree" ("email");

CREATE UNIQUE INDEX "Contact_email_key" ON "public"."contact" USING "btree" ("email");

ALTER TABLE ONLY "public"."post"
    ADD CONSTRAINT "Post_accountId_fkey" FOREIGN KEY ("accountId") REFERENCES "public"."account"("id") ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE ONLY "public"."account"
    ADD CONSTRAINT "public_Account_country_fkey" FOREIGN KEY ("country") REFERENCES "public"."country"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."product"
    ADD CONSTRAINT "public_Product_category_fkey" FOREIGN KEY ("category") REFERENCES "public"."product_category"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."profile"
    ADD CONSTRAINT "public_Profile_id_fkey" FOREIGN KEY ("id") REFERENCES "auth"."users"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."account_contact"
    ADD CONSTRAINT "public_account_contact_account_id_fkey" FOREIGN KEY ("account_id") REFERENCES "public"."account"("id") ON UPDATE CASCADE ON DELETE SET NULL;

ALTER TABLE ONLY "public"."account_contact"
    ADD CONSTRAINT "public_account_contact_contact_id_fkey" FOREIGN KEY ("contact_id") REFERENCES "public"."contact"("id") ON UPDATE CASCADE ON DELETE SET DEFAULT;

ALTER TABLE ONLY "public"."account_contact"
    ADD CONSTRAINT "public_account_contact_relationship_fkey" FOREIGN KEY ("relationship") REFERENCES "public"."relationship"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."product_component"
    ADD CONSTRAINT "public_product_component_component_fkey" FOREIGN KEY ("component") REFERENCES "public"."product"("id");

ALTER TABLE ONLY "public"."product_component"
    ADD CONSTRAINT "public_product_component_main_fkey" FOREIGN KEY ("main") REFERENCES "public"."product"("id");

ALTER TABLE ONLY "public"."product_image"
    ADD CONSTRAINT "public_product_image_productId_fkey" FOREIGN KEY ("productId") REFERENCES "public"."product"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."product_variant_manufacturer"
    ADD CONSTRAINT "public_product_variant_manufacturer_manufacturer_id_fkey" FOREIGN KEY ("manufacturer_id") REFERENCES "public"."account"("id");

ALTER TABLE ONLY "public"."product_variant_manufacturer"
    ADD CONSTRAINT "public_product_variant_manufacturer_product_variant_id_fkey" FOREIGN KEY ("product_variant_id") REFERENCES "public"."product_variant"("id");

ALTER TABLE ONLY "public"."product_variant"
    ADD CONSTRAINT "public_product_variant_product_id_fkey" FOREIGN KEY ("product_id") REFERENCES "public"."product"("id");

CREATE POLICY "Allow read only for authenticated users" ON "public"."account" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Allow update only for authenticated users" ON "public"."account" FOR UPDATE TO "authenticated" USING (true);

CREATE POLICY "Enable all for authenticated users only" ON "public"."product_component" TO "authenticated" USING (true) WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."account" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable insert for authenticated users only" ON "public"."product" FOR INSERT TO "authenticated" WITH CHECK (true);

CREATE POLICY "Enable read for authenticated users only" ON "public"."product" FOR SELECT TO "authenticated" USING (true);

CREATE POLICY "Only Superuser can delete profiles." ON "public"."profile" FOR DELETE USING (false);

CREATE POLICY "Public Profile are viewable by everyone." ON "public"."profile" FOR SELECT USING (("auth"."uid"() = "id"));

CREATE POLICY "Users can insert their own profile." ON "public"."profile" FOR INSERT WITH CHECK (("auth"."uid"() = "id"));

CREATE POLICY "Users can update own profile." ON "public"."profile" FOR UPDATE USING (("auth"."uid"() = "id"));

ALTER TABLE "public"."account" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."account_contact" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "allow authenitcated Users do all operations" ON "public"."product_image" TO "authenticated" USING (true);

CREATE POLICY "allow for authenticated" ON "public"."contact" USING (true);

CREATE POLICY "allow for authenticated" ON "public"."country" TO "authenticated" USING (true);

CREATE POLICY "allow for authenticated" ON "public"."product_category" FOR SELECT USING (true);

ALTER TABLE "public"."contact" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."country" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."currency" ENABLE ROW LEVEL SECURITY;

CREATE POLICY "permissive for authenticated" ON "public"."post" TO "authenticated" USING (true);

ALTER TABLE "public"."post" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."price" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."product" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."product_category" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."product_component" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."product_image" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."product_variant" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."product_variant_manufacturer" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."profile" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."relationship" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "anon";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."handle_new_user"() TO "service_role";

GRANT ALL ON TABLE "public"."account" TO "anon";
GRANT ALL ON TABLE "public"."account" TO "authenticated";
GRANT ALL ON TABLE "public"."account" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Account_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Account_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Account_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."contact" TO "anon";
GRANT ALL ON TABLE "public"."contact" TO "authenticated";
GRANT ALL ON TABLE "public"."contact" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Contact_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Contact_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Contact_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."post" TO "anon";
GRANT ALL ON TABLE "public"."post" TO "authenticated";
GRANT ALL ON TABLE "public"."post" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Post_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Post_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Post_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."product_category" TO "anon";
GRANT ALL ON TABLE "public"."product_category" TO "authenticated";
GRANT ALL ON TABLE "public"."product_category" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Product_Category_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Product_Category_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Product_Category_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."account_contact" TO "anon";
GRANT ALL ON TABLE "public"."account_contact" TO "authenticated";
GRANT ALL ON TABLE "public"."account_contact" TO "service_role";

GRANT ALL ON SEQUENCE "public"."account_contact_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."account_contact_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."account_contact_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."country" TO "anon";
GRANT ALL ON TABLE "public"."country" TO "authenticated";
GRANT ALL ON TABLE "public"."country" TO "service_role";

GRANT ALL ON SEQUENCE "public"."country_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."country_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."country_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."currency" TO "anon";
GRANT ALL ON TABLE "public"."currency" TO "authenticated";
GRANT ALL ON TABLE "public"."currency" TO "service_role";

GRANT ALL ON SEQUENCE "public"."currency_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."currency_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."currency_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."price" TO "anon";
GRANT ALL ON TABLE "public"."price" TO "authenticated";
GRANT ALL ON TABLE "public"."price" TO "service_role";

GRANT ALL ON SEQUENCE "public"."price_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."price_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."price_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."product" TO "anon";
GRANT ALL ON TABLE "public"."product" TO "authenticated";
GRANT ALL ON TABLE "public"."product" TO "service_role";

GRANT ALL ON TABLE "public"."product_component" TO "anon";
GRANT ALL ON TABLE "public"."product_component" TO "authenticated";
GRANT ALL ON TABLE "public"."product_component" TO "service_role";

GRANT ALL ON SEQUENCE "public"."product_component_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."product_component_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."product_component_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."product_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."product_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."product_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."product_image" TO "anon";
GRANT ALL ON TABLE "public"."product_image" TO "authenticated";
GRANT ALL ON TABLE "public"."product_image" TO "service_role";

GRANT ALL ON SEQUENCE "public"."product_image_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."product_image_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."product_image_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."product_variant" TO "anon";
GRANT ALL ON TABLE "public"."product_variant" TO "authenticated";
GRANT ALL ON TABLE "public"."product_variant" TO "service_role";

GRANT ALL ON SEQUENCE "public"."product_variant_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."product_variant_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."product_variant_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."product_variant_manufacturer" TO "anon";
GRANT ALL ON TABLE "public"."product_variant_manufacturer" TO "authenticated";
GRANT ALL ON TABLE "public"."product_variant_manufacturer" TO "service_role";

GRANT ALL ON SEQUENCE "public"."product_variant_manufacturer_product_variant_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."product_variant_manufacturer_product_variant_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."product_variant_manufacturer_product_variant_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."profile" TO "anon";
GRANT ALL ON TABLE "public"."profile" TO "authenticated";
GRANT ALL ON TABLE "public"."profile" TO "service_role";

GRANT ALL ON TABLE "public"."relationship" TO "anon";
GRANT ALL ON TABLE "public"."relationship" TO "authenticated";
GRANT ALL ON TABLE "public"."relationship" TO "service_role";

GRANT ALL ON SEQUENCE "public"."relationship_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."relationship_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."relationship_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
